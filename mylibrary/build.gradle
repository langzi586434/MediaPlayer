apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api project(':httpModule')
    api project(':utileModule')
    api project(':commontModule')
    api rootProject.ext.dependenciesJAR.playServicesCast
    api rootProject.ext.dependenciesJAR.appcompat
    api rootProject.ext.dependenciesJAR.material
    api rootProject.ext.dependenciesJAR.Glide
    api rootProject.ext.dependenciesJAR.gson
    api rootProject.ext.dependenciesJAR.okhttp
    api rootProject.ext.dependenciesJAR.logging
    api rootProject.ext.dependenciesJAR.retrofit
    api rootProject.ext.dependenciesJAR.adapterRxjava
    api rootProject.ext.dependenciesJAR.retrofit2Gson
    api rootProject.ext.dependenciesJAR.rxandroid
    api rootProject.ext.dependenciesJAR.rxjava
    api rootProject.ext.dependenciesJAR.constraintlayout

    testApi rootProject.ext.dependenciesJAR.junit
    androidTestApi rootProject.ext.dependenciesJAR.extJunit
    androidTestApi rootProject.ext.dependenciesJAR.espressoCore
}