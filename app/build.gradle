plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.versions.applicationId
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            //是否优化zip
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            //启用代码混淆
            minifyEnabled true
            //防止方法数量超过65536导致错误
            multiDexEnabled = true
            //混淆规则配置文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
             buildConfigField "Boolean", "DEBUG_MODE", 'false'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            zipAlignEnabled true
            multiDexEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
             buildConfigField "Boolean", "DEBUG_MODE", 'true'
        }
    }
//    applicationVariants.all { variant ->
//        variant.outputs.each { output ->
//            variant.packageApplicationProvider.get().outputDirectory = new File(project.rootDir.absolutePath + "/apk")
//            def fileName
//            if (output.name == 'debug') {
//                fileName = "AppName_v${defaultConfig.versionName}_c${defaultConfig.versionCode}_${"Test"}_${releaseTime()}.apk"
//            } else {
//                fileName = "AppName_v${defaultConfig.versionName}_c${defaultConfig.versionCode}_${output.name}-${releaseTime()}.apk"
//            }
//            output.outputFileName = fileName
//        }
//    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    if (rootProject.ext.isModel) {
        implementation project(":mainModule")
    }

    implementation project(':mylibrary')
}